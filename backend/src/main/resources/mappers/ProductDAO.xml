<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.commerce.dao.ProductDAO">
    <resultMap id="ProductDetailResultMap" type="com.example.commerce.dto.ProductDetailDTO">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="category" column="category"/>
        <result property="minPrice" column="min_price"/>
        <result property="description" column="description"/>
        <result column="features" property="features"/>
        <result column="specifications" property="specifications"/>
        <collection property="variants" ofType="com.example.commerce.model.ProductVariant">
            <id property="id" column="variant_id"/>
            <result property="productId" column="variant_product_id"/>
            <result property="color" column="variant_color"/>
            <result property="size" column="variant_size"/>
            <result property="price" column="variant_price"/>
            <result property="image" column="variant_image"/>
            <result property="stockQuantity" column="variant_stock_quantity"/>
            <result property="inStock" column="variant_in_stock"/>
        </collection>
    </resultMap>



    <select id="findVariantsByProductIds" resultType="com.example.commerce.model.ProductVariant">
        SELECT id, product_id, color, size, price, image, stock_quantity, in_stock
        FROM product_variants
        WHERE product_id IN
        <foreach item="productId" collection="productIds" open="(" separator="," close=")">
            #{productId}
        </foreach>
    </select>

    <select id="findProducts" resultType="com.example.commerce.model.Product">
        SELECT id, name, category
        FROM products
        <where>
            <if test="category != null and category != ''">
                AND category = #{category}
            </if>
            <if test="keyword != null and keyword != ''">
                AND (name LIKE CONCAT('%', #{keyword}, '%') OR description LIKE CONCAT('%', #{keyword}, '%'))
            </if>
        </where>
    </select>

    <insert id="insertProductVariants" parameterType="java.util.List">
        INSERT INTO product_variants (product_id, color, size, price, image, stock_quantity, created_at, updated_at)
        VALUES
        <foreach item="variant" collection="variants" separator=",">
            (#{variant.productId}, #{variant.color}, #{variant.size}, #{variant.price}, #{variant.image},
            #{variant.stockQuantity}, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)
        </foreach>
    </insert>

    <select id="getVariantById" resultType="com.example.commerce.model.ProductVariant">
        SELECT id,
               product_id,
               color,
               size,
               price,
               image,
               stock_quantity,
               in_stock
        FROM product_variants
        WHERE id = #{id}
    </select>

    <select id="searchProducts" resultType="com.example.commerce.dto.ProductDTO">
        SELECT
        p.id,
        p.name,
        p.category,
        p.default_image AS defaultImage,
        p.min_price AS minPrice,
        EXISTS (SELECT 1 FROM wishlist_items wi WHERE wi.user_id = #{userId} AND wi.product_id = p.id) AS isWishlisted
        FROM
        products p
        WHERE p.status = 'ACTIVE'
        <if test="category != null and category != '' and category != '全部'">
            AND p.category = #{category}
        </if>
        <if test="keyword != null and keyword != ''">
            AND p.name LIKE CONCAT('%', #{keyword}, '%')
        </if>
        <if test="minPrice != null">
            AND p.min_price &gt;= #{minPrice}
        </if>
        <if test="maxPrice != null">
            AND p.min_price &lt;= #{maxPrice}
        </if>
    </select>

    <select id="getRandomProducts" resultType="com.example.commerce.dto.ProductDTO">
        SELECT
        p.id,
        p.name,
        p.category,
        p.default_image AS defaultImage,
        p.min_price AS minPrice,
        EXISTS (SELECT 1 FROM wishlist_items wi WHERE wi.user_id = #{userId} AND wi.product_id = p.id) AS isWishlisted
        FROM products p
        ORDER BY RAND()
        LIMIT #{size}
    </select>

    <select id="getProductDetailWithVariants" resultMap="ProductDetailResultMap">
        SELECT
            p.id,
            p.name,
            p.description,
            p.category,
            p.min_price,
            p.features,
            p.specifications,
            pv.id AS variant_id,
            pv.product_id AS variant_product_id,
            pv.color AS variant_color,
            pv.size AS variant_size,
            pv.price AS variant_price,
            pv.image AS variant_image,
            pv.stock_quantity AS variant_stock_quantity,
            pv.in_stock AS variant_in_stock
        FROM products p
                 LEFT JOIN product_variants pv
                           ON p.id = pv.product_id
        WHERE p.id = #{productId}
        ORDER BY pv.id
    </select>

    <select id="getProductByOwner" resultType="com.example.commerce.model.Product">
        SELECT id,
               default_image,
               name,
               category,
               status,
               min_price,
               total_stock
        FROM products
        WHERE owner_id = #{id}
    </select>

    <delete id="deleteVariantsByIds">
        DELETE FROM product_variants
        WHERE id IN
        <foreach item="variantId" collection="list" open="(" separator="," close=")">
            #{variantId}
        </foreach>
    </delete>

    <update id="updateProduct" parameterType="com.example.commerce.model.Product">
        UPDATE products
        <set>
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="description != null">
                description = #{description},
            </if>
            <if test="category != null and category != ''">
                category = #{category},
            </if>
            <if test="features != null">
                features = #{features},
            </if>
            <if test="specifications != null">
                specifications = #{specifications},
            </if>
        </set>
        WHERE id = #{id}
    </update>

    <update id="updateProductVariants" parameterType="java.util.List">
        UPDATE product_variants
        SET
        product_id =
        CASE id
        <foreach collection="list" item="variant">
            WHEN #{variant.id} THEN #{variant.productId}
        </foreach>
        ELSE product_id
        END,
        color =
        CASE id
        <foreach collection="list" item="variant">
            WHEN #{variant.id} THEN #{variant.color}
        </foreach>
        ELSE color END,
        size =
        CASE id
        <foreach collection="list" item="variant">
            WHEN #{variant.id} THEN #{variant.size}
        </foreach>
        ELSE size END,
        price =
        CASE id
        <foreach collection="list" item="variant">
            WHEN #{variant.id} THEN #{variant.price}
        </foreach>
        ELSE price END,
        stock_quantity =
        CASE id
        <foreach collection="list" item="variant">
            WHEN #{variant.id} THEN #{variant.stockQuantity}
        </foreach>
        ELSE stock_quantity END,
        image =
        CASE id
        <foreach collection="list" item="variant">
            WHEN #{variant.id} THEN #{variant.image}
        </foreach>
        ELSE image END
        WHERE id IN
        <foreach collection="list" item="variant" open="(" separator="," close=")">
            #{variant.id}
        </foreach>
    </update>

    <update id="clearVariantImagesByProductAndColors">
        UPDATE product_variants
        SET image = NULL
        WHERE product_id = #{productId}
        AND color IN
        <foreach collection="deletedColors" item="color" open="(" separator="," close=")">
            #{color}
        </foreach>
    </update>

    <select id="findAllProductsAdmin" resultType="com.example.commerce.model.Product">
        SELECT
        id,
        owner_id,
        name,
        description,
        category,
        default_image,
        min_price,
        total_stock,
        features,
        specifications,
        status
        FROM
        products
        <where>
            <if test="statusFilter != null">
                status = #{statusFilter}
            </if>
        </where>
    </select>

    <select id="searchProductsAdmin" resultType="com.example.commerce.model.Product">
        SELECT p.*
        FROM products p
        <where>
            <if test="criteria.productId != null">
                AND p.id = #{criteria.productId}
            </if>
            <if test="criteria.name != null and criteria.name != ''">
                AND p.name LIKE CONCAT('%', #{criteria.name}, '%')
            </if>
            <if test="criteria.categoryName != null and criteria.categoryName != ''">
                AND p.category LIKE CONCAT('%', #{criteria.categoryName}, '%')
            </if>
            <if test="criteria.status != null and criteria.status != ''">
                AND p.status = #{criteria.status}
            </if>
            <if test="criteria.dateAddedStart.present">
                AND p.created_at &gt;= #{criteria.dateAddedStart.get()}
            </if>
            <if test="criteria.dateAddedEnd.present">
                AND p.created_at &lt;= DATE_ADD(#{criteria.dateAddedEnd.get()}, INTERVAL 1 DAY) <!-- For inclusive end date -->
            </if>
            <if test="criteria.minPrice != null or criteria.maxPrice != null">
                AND EXISTS (
                    SELECT 1 FROM product_variants pv
                    WHERE pv.product_id = p.id
                    <if test="criteria.minPrice != null">
                        AND pv.price &gt;= #{criteria.minPrice}
                    </if>
                    <if test="criteria.maxPrice != null">
                        AND pv.price &lt;= #{criteria.maxPrice}
                    </if>
                )
            </if>
            <!-- Default behavior: do not show DELETED products unless explicitly requested by status -->
            <if test="criteria.status == null or criteria.status == '' or !criteria.status.equalsIgnoreCase('DELETED')">
                AND p.status != 'DELETED'
            </if>
        </where>
        ORDER BY p.created_at DESC
    </select>
</mapper>